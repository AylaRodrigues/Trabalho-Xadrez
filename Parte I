//Ayla Rodrigues e Douglas Mareli
//Eu vencerei Beth Harmon

#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <locale.h>
#include <windows.h>

struct jogada{
	int linhaDe,colunaDe,linhaPara,colunaPara;
};
//para botar as peças na posição inical, foi feito um laço com uma serie de condições que colocam cada peça no seu devido lugar
int IniciaTabuleiro(int tab[8][8]){
	 
	for(int i = 0; i <  8; i++)
	{
		for(int j = 0; j <  8; j++)
		{
			if((i==0 && j==0) || (i==0 && j==7)){
				tab[i][j] = -4;	
			}else if((i==0 && j==1) || (i==0 && j==6)){
				tab[i][j] = -2;
			}else if((i==0 && j==2) || (i==0 && j==5)){
				tab[i][j] = -3;
			}else if(i==0 && j ==3){
				tab[i][j] = -5;
			}else if(i==0 && j==4){
				tab[i][j] = -6;
			}else if(i==1){
				tab[i][j] = -1;
			}else if(i==6){
				tab[i][j] = 1;
			}else if((i==7 && j==0) || (i==7 && j==7)){
				tab[i][j] = 4;	
			}else if((i==7 && j==1) || (i==7 && j==6)){
				tab[i][j] = 2;
			}else if((i==7 && j==2) || (i==7 && j==5)){
				tab[i][j] = 3;
			}else if(i==7 && j ==3){
				tab[i][j] = 5;
			}else if(i==7 && j==4){
				tab[i][j] = 6;
			}else{
				tab[i][j] = 0;
			}
		}
	}
	
}
//para modificar o tabuleiro de acordo com a jgoada escolhida
int jogadaEscolhida(int tab[8][8], struct jogada *peca, int numPeca){ 
	
		for(int i = 0; i<8; i++){
			for(int j = 0; j<8; j++){
				if(i==(*peca).linhaDe && j==(*peca).colunaDe){
					tab[i][j]= 0;
				}
				if(i==(*peca).linhaPara && j==(*peca).colunaPara){
					tab[i][j]= numPeca;
				}
			}
		}
}

int jogadaPeao(int linha, int coluna, int tab[8][8]){

	struct jogada peao[3];
	int ct = 0; // contador para o indice do vetor
	int escolhida;
	int numPeca; // variavel que indica o numero representante da peça no tabuleiro (sera passada para a funcção jogadaEscolhida)
	
	printf("\n> Você escolheu o peão.\n");
	
	if(tab[linha][coluna] > 0) //peça branca
	{ 
		numPeca = 1;
		if(tab[linha-1][coluna] == 0){
			peao[ct].colunaDe = coluna;
			peao[ct].linhaDe = linha;
			peao[ct].colunaPara = coluna;
			peao[ct].linhaPara = linha -1;
			ct++;
		}
		if(coluna + 1 <= 7 && tab[linha-1][coluna+1]<0){
			peao[ct].colunaDe = coluna;
			peao[ct].linhaDe = linha;
			peao[ct].colunaPara = coluna +1;
			peao[ct].linhaPara = linha -1;
			ct++;
		}
		if(coluna - 1 >= 0 && tab[linha-1][coluna-1]<0){
			peao[ct].colunaDe = coluna;
			peao[ct].linhaDe = linha;
			peao[ct].colunaPara = coluna -1;
			peao[ct].linhaPara = linha -1;
			ct++;
		}
	}else //peça preta
	{ 
		numPeca = -1;
		if(tab[linha+1][coluna] == 0){
			peao[ct].colunaDe = coluna;
			peao[ct].linhaDe = linha;
			peao[ct].colunaPara = coluna;
			peao[ct].linhaPara = linha +1;
			ct++;
		}
		if(coluna + 1 <= 7 && tab[linha+1][coluna+1]>0){
			peao[ct].colunaDe = coluna;
			peao[ct].linhaDe = linha;
			peao[ct].colunaPara = coluna +1;
			peao[ct].linhaPara = linha +1;
			ct++;
		}
		if(coluna - 1 >= 0 && tab[linha+1][coluna-1]>0){
			peao[ct].colunaDe = coluna;
			peao[ct].linhaDe = linha;
			peao[ct].colunaPara = coluna -1;
			peao[ct].linhaPara = linha +1;
			ct++;
		}
	}
	if(ct==0){
			printf("> Não há jogadas para essa peça.\n");
	}else{
		for(int i =0; i<ct; i++){
			printf(" Opção de jogada %d: peão de %d %d ",i+1,linha,coluna);
			printf("para %d %d\n\n", peao[i].linhaPara,peao[i].colunaPara);
		}
		printf("> Escolha uma das opções(digite o numero):\n");
		scanf("%d",&escolhida);
		escolhida--;	
		jogadaEscolhida(tab,&peao[escolhida],numPeca);
	}
}

int jogadaTorre(int linha, int coluna, int tab[8][8]){
	
	struct jogada torre[14];
	int ct = 0; //contador para o indice do vetor
	int escolhida;
	int numPeca;
	
	printf("Você escolheu a torre.\n");
	
	if(tab[linha][coluna]>0) //peça branca
	{
			numPeca = 4;
		for(int i = linha; i>=0; i--) //torre avança
		{
			torre[ct].colunaDe = coluna;
			torre[ct].linhaDe = linha;
			torre[ct].colunaPara = coluna;
			
			if(tab[i][coluna] == 0){
				torre[ct].linhaPara = i;
				ct++;
			}else if(tab[i][coluna] < 0){
				torre[ct].linhaPara = i;
				ct++;
				break;
			}else if(tab[i][coluna] > 0){
				break;
			}
		}
		for(int i = linha; i<=7; i++) //torre recua
		{
			torre[ct].colunaDe = coluna;
			torre[ct].linhaDe = linha;
			torre[ct].colunaPara = coluna;
			
			if(tab[i][coluna] == 0){
				torre[ct].linhaPara = i;
				ct++;
			}else if(tab[i][coluna] < 0){
				torre[ct].linhaPara = i;
				ct++;
				break;
			}else if(tab[i][coluna] > 0){
				break;
			}	
		}
		for(int i = coluna; i<=7; i++) //torre para direita
		{
			torre[ct].colunaDe = coluna;
			torre[ct].linhaDe = linha;
			torre[ct].linhaPara = linha;
			
			if(tab[linha][i] == 0){
				torre[ct].colunaPara = i;
				ct++;
			}else if(tab[linha][i] < 0){
				torre[ct].colunaPara = i;
				ct++;
				break;
			}else if(tab[linha][i] > 0){
				break;
			}		
		}
		for(int i = coluna; i>=0; i--) //torre para esquerda
		{
			torre[ct].colunaDe = coluna;
			torre[ct].linhaDe = linha;
			torre[ct].linhaPara = linha;
			
			if(tab[linha][i] == 0){
				torre[ct].colunaPara = i;
				ct++;
			}else if(tab[linha][i] < 0){
				torre[ct].colunaPara = i;
				ct++;
				break;
			}else if(tab[linha][i] > 0){
				break;
			}		
		}
		
	}else //peça preta
	{
		numPeca = -4;
		for(int i = linha; i>=0; i--) //torre recua
		{
			torre[ct].colunaDe = coluna;
			torre[ct].linhaDe = linha;
			torre[ct].colunaPara = coluna;
			
			if(tab[i][coluna] == 0){
				torre[ct].linhaPara = i;
				ct++;
			}else if(tab[i][coluna] > 0){
				torre[ct].linhaPara = i;
				ct++;
				break;
			}else if(tab[i][coluna] < 0){
				break;
			}	
		}
		for(int i = linha; i<=7; i++) //torre avança
		{
			torre[ct].colunaDe = coluna;
			torre[ct].linhaDe = linha;
			torre[ct].colunaPara = coluna;
			
			if(tab[i][coluna] == 0){
				torre[ct].linhaPara = i;
				ct++;
			}else if(tab[i][coluna] > 0){
				torre[ct].linhaPara = i;
				ct++;
				break;
			}else if(tab[i][coluna] < 0){
				break;
			}		
		}
		for(int i = coluna; i<=7; i++) //torre para direita
		{
			torre[ct].colunaDe = coluna;
			torre[ct].linhaDe = linha;
			torre[ct].linhaPara = linha;
			
			if(tab[linha][i] == 0){
				torre[ct].colunaPara = i;
				ct++;
			}else if(tab[linha][i] > 0){
				torre[ct].colunaPara = i;
				ct++;
				break;
			}else if(tab[linha][i] < 0){
				break;
			}		
		}
		for(int i = coluna; i>=0; i--) //torre para esquerda
		{
			torre[ct].colunaDe = coluna;
			torre[ct].linhaDe = linha;
			torre[ct].linhaPara = linha;
			
			if(tab[linha][i] == 0){
				torre[ct].colunaPara = i;
				ct++;
			}else if(tab[linha][i] > 0){
				torre[ct].colunaPara = i;
				ct++;
				break;
			}else if(tab[linha][i] < 0){
				break;
			}		
		}
	}
	if(ct==0){
			printf("> Não há jogadas para essa peça.\n");
	}else{
		for(int i =0; i<ct; i++){
			printf(" Opção de jogada %d: peão de %d %d ",i+1,linha,coluna);
			printf("para %d %d\n\n", torre[i].linhaPara,torre[i].colunaPara);
		}
		printf("> Escolha uma das opções(digite o numero):\n");
		scanf("%d",&escolhida);
		escolhida--;
		jogadaEscolhida(tab,&torre[escolhida],numPeca);
	}
}

int jogadaCavalo(int linha, int coluna, int tab[8][8]){
	
	struct jogada cavalo[8];
	int ct=0;
	int escolhida;
	int numPeca;
	printf("Você escolheu o cavalo.\n");
	
	if(tab[linha][coluna] > 0) //peça branca
	{ 
		numPeca = 2;
		if(linha-2>=0 && coluna +1<=7 && tab[linha-2][coluna+1]<=0){
			cavalo[ct].linhaDe = linha;
			cavalo[ct].colunaDe = coluna;
			cavalo[ct].linhaPara = linha-2;
			cavalo[ct].colunaPara = coluna+1;
			ct++;
		}
		if(linha-2>=0 && coluna -1>=0 && tab[linha-2][coluna-1]<=0){
			cavalo[ct].linhaDe = linha;
			cavalo[ct].colunaDe = coluna;
			cavalo[ct].linhaPara = linha-2;
			cavalo[ct].colunaPara = coluna-1;
			ct++;
		}
		if(linha+2<=7 && coluna-1>=0 && tab[linha+2][coluna-1]<=0){
			cavalo[ct].linhaDe = linha;
			cavalo[ct].colunaDe = coluna;
			cavalo[ct].linhaPara = linha+2;
			cavalo[ct].colunaPara = coluna-1;
			ct++;
		}
		if(linha+2<=7 && coluna+1<=7 && tab[linha+2][coluna+1]<=0){
			cavalo[ct].linhaDe = linha;
			cavalo[ct].colunaDe = coluna;
			cavalo[ct].linhaPara = linha+2;
			cavalo[ct].colunaPara = coluna+1;
			ct++;
		}
		if(linha+1<=7 && coluna+2<=7 && tab[linha+1][coluna+2]<=0){
			cavalo[ct].linhaDe = linha;
			cavalo[ct].colunaDe = coluna;
			cavalo[ct].linhaPara = linha+1;
			cavalo[ct].colunaPara = coluna+2;
			ct++;
		}if(linha+1<=7 && coluna-2>=0 && tab[linha+1][coluna-2]<=0){
			cavalo[ct].linhaDe = linha;
			cavalo[ct].colunaDe = coluna;
			cavalo[ct].linhaPara = linha+1;
			cavalo[ct].colunaPara = coluna-2;
			ct++;
		}
		if(linha-1>=0 && coluna+2<=7 && tab[linha-1][coluna+2]<=0){
			cavalo[ct].linhaDe = linha;
			cavalo[ct].colunaDe = coluna;
			cavalo[ct].linhaPara = linha-1;
			cavalo[ct].colunaPara = coluna+2;
			ct++;
		}
		if(linha-1>=0 && coluna-2>=0 && tab[linha-1][coluna-2]<=0){
			cavalo[ct].linhaDe = linha;
			cavalo[ct].colunaDe = coluna;
			cavalo[ct].linhaPara = linha-1;
			cavalo[ct].colunaPara = coluna-2;
			ct++;
		}
	}else // peca preta
	{
		numPeca = -2;
		if(linha-2>=0 && coluna+1<=7 && tab[linha-2][coluna+1]>=0){
			cavalo[ct].linhaDe = linha;
			cavalo[ct].colunaDe = coluna;
			cavalo[ct].linhaPara = linha-2;
			cavalo[ct].colunaPara = coluna+1;
			ct++;
		}
		if(linha-2>=0 && coluna-1>=0 && tab[linha-2][coluna-1]>=0){
			cavalo[ct].linhaDe = linha;
			cavalo[ct].colunaDe = coluna;
			cavalo[ct].linhaPara = linha-2;
			cavalo[ct].colunaPara = coluna-1;
			ct++;
		}
		if(linha+2<=7 && coluna-1>=0 && tab[linha+2][coluna-1]>=0){
			cavalo[ct].linhaDe = linha;
			cavalo[ct].colunaDe = coluna;
			cavalo[ct].linhaPara = linha+2;
			cavalo[ct].colunaPara = coluna-1;
			ct++;
		}
		if(linha+2<=7 && coluna+1<=7 && tab[linha+2][coluna+1]>=0){
			cavalo[ct].linhaDe = linha;
			cavalo[ct].colunaDe = coluna;
			cavalo[ct].linhaPara = linha+2;
			cavalo[ct].colunaPara = coluna+1;
			ct++;
		}
		if(linha+1<=7 && coluna+2<=7 && tab[linha+1][coluna+2]>=0){
			cavalo[ct].linhaDe = linha;
			cavalo[ct].colunaDe = coluna;
			cavalo[ct].linhaPara = linha+1;
			cavalo[ct].colunaPara = coluna+2;
			ct++;
		}if(linha+1>=7 && coluna-2>=0 && tab[linha+1][coluna-2]>=0){
			cavalo[ct].linhaDe = linha;
			cavalo[ct].colunaDe = coluna;
			cavalo[ct].linhaPara = linha+1;
			cavalo[ct].colunaPara = coluna-2;
			ct++;
		}
		if(linha-1>=0 && coluna+2<=7 && tab[linha-1][coluna+2]>=0){
			cavalo[ct].linhaDe = linha;
			cavalo[ct].colunaDe = coluna;
			cavalo[ct].linhaPara = linha-1;
			cavalo[ct].colunaPara = coluna+2;
			ct++;
		}
		if(linha-1>=0 && coluna-2>=0 && tab[linha-1][coluna-2]>=0){
			cavalo[ct].linhaDe = linha;
			cavalo[ct].colunaDe = coluna;
			cavalo[ct].linhaPara = linha-1;
			cavalo[ct].colunaPara = coluna-2;
			ct++;
		}
	}
	
	if(ct==0){
			printf("> Não há jogadas para essa peça.\n");
	}else{
		for(int i =0; i<ct; i++){
			printf(" Opção de jogada %d: peão de %d %d ",i+1,linha,coluna);
			printf("para %d %d\n\n", cavalo[i].linhaPara,cavalo[i].colunaPara);
		}
		printf("> Escolha uma das opções(digite o numero):\n");
		scanf("%d",&escolhida);
		escolhida--;
		jogadaEscolhida(tab,&cavalo[escolhida],numPeca);
	}
	
}

int jogadaBispo(int linha, int coluna, int tab[8][8]){
	struct jogada bispo;
}

int jogadaDama(int linha, int coluna, int tab[8][8]){
	struct jogada dama;
	
}

int jogadaRei(int linha, int coluna, int tab[8][8]){
	printf("jogada do rei");
} 

int printTabuleiro(int tab[8][8]){
	printf("\n");
	for(int i =0; i<8; i++)
	{
		for(int j=0; j<8; j++)
		{
			if(tab[i][j] >= 0 ){
				printf("  %d ",tab[i][j]);
			}else{
				printf(" %d ",tab[i][j]);
			}
		}	
		printf("\n");
	}
	
	printf("\n\n negativo=pretas; positivo=brancas\n 1=peão; 2=cavalo; 3=bispo;\n 4=torre; 5=dama; 6=rei;\n\n");
}

int main(){
	
	setlocale(LC_ALL,"");
	
	int tab[8][8] /*= {0,0,0,0,0,1,0,0,1,0,0,0,1,0,0,0,0,0,0,0,-2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0}*/;
	int jogo = 0; // variavel que dara continuidade ao jogo (enquanto o jogo estiver rolando, seu valor será 1, quando 0 o jogo para).
	char iniciar[10];//varavel que servira de comando para iniciar o tabuleiro.
	struct jogada jogador;
	
	printf("---------- Bem vindo! ----------\n");
	printf("> Pronto para vencer Beth Harmon?\n\n\nDigite iniciar para gerar o tabuleiro!\n");
	scanf("%s",iniciar);
	
	if(strcmp(iniciar,"iniciar") ==0){
		system("cls");
		IniciaTabuleiro(tab);
		printTabuleiro(tab);
		jogo=1;
	}
	
	int rodada = 0;// quando for impar = vez das brancas/ par = vez das pretas
	int x= 0; // variável para caso o jogador escolha uma casa zerada (sem peça)
	while(jogo == 1)
	{
		rodada++;
		if(rodada%2 == 0){
			printf("-----Vez das Pretas-----\n> Escolha uma peça para jogar(digite a linha e a coluna):\n");
			
			while(x==0){
				scanf("%d %d",&jogador.linhaDe,&jogador.colunaDe);
				if(tab[jogador.linhaDe][jogador.colunaDe] >= 0)
				{
					printf(">Essa peça não é sua ou não há peça nessa casa, por favor escolha outra: \n");
				}else if(tab[jogador.linhaDe][jogador.colunaDe] == -1)
				{
					jogadaPeao(jogador.linhaDe,jogador.colunaDe,tab);
					x++;
				}else if(tab[jogador.linhaDe][jogador.colunaDe] == -2)
				{
					jogadaCavalo(jogador.linhaDe,jogador.colunaDe,tab);
					x++;
				}else if(tab[jogador.linhaDe][jogador.colunaDe] == -3)
				{
					jogadaBispo(jogador.linhaDe,jogador.colunaDe,tab);
					x++;
				}else if(tab[jogador.linhaDe][jogador.colunaDe] == -4)
				{
					jogadaTorre(jogador.linhaDe,jogador.colunaDe,tab);
					x++;
				}else if(tab[jogador.linhaDe][jogador.colunaDe] == -5)
				{
					jogadaDama(jogador.linhaDe,jogador.colunaDe,tab);
					x++;
				}else if(tab[jogador.linhaDe][jogador.colunaDe] == -6)
				{
					jogadaRei(jogador.linhaDe,jogador.colunaDe,tab);
					x++;
				}
			}
		}else{
			printf("-----Vez das Brancas-----\n> Escolha uma peça para jogar(digite a linha e a coluna):\n");
			
			while(x==0){
				scanf("%d %d",&jogador.linhaDe,&jogador.colunaDe);
				if(tab[jogador.linhaDe][jogador.colunaDe] <= 0)
				{
					printf("> Essa peça não é sua ou não há peça nessa casa, por favor escolha outra: \n");
				}else if(tab[jogador.linhaDe][jogador.colunaDe] == 1)
				{
					jogadaPeao(jogador.linhaDe,jogador.colunaDe,tab);
					x++;
				}else if(tab[jogador.linhaDe][jogador.colunaDe] == 2)
				{
					jogadaCavalo(jogador.linhaDe,jogador.colunaDe,tab);
					x++;
				}else if(tab[jogador.linhaDe][jogador.colunaDe] == 3)
				{
					jogadaBispo(jogador.linhaDe,jogador.colunaDe,tab);
					x++;
				}else if(tab[jogador.linhaDe][jogador.colunaDe] == 4)
				{
					jogadaTorre(jogador.linhaDe,jogador.colunaDe,tab);
					x++;
				}else if(tab[jogador.linhaDe][jogador.colunaDe] == 5)
				{
					jogadaDama(jogador.linhaDe,jogador.colunaDe,tab);
					x++;
				}else if(tab[jogador.linhaDe][jogador.colunaDe] == 6)
				{
					jogadaRei(jogador.linhaDe,jogador.colunaDe,tab);
					x++;
				}
			}
		}
		x=0;
		
		printTabuleiro(tab);
		
	}
		
	return 0;
}
